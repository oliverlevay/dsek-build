{"version":3,"file":"member2-BtEDLQG7.js","sources":["../../../.svelte-kit/adapter-node/chunks/member2.js"],"sourcesContent":["import { c as NOLLA_DEFAULT_SUBSCRIPTION_SETTINGS, D as DEFAULT_SUBSCRIPTION_SETTINGS } from \"./types3.js\";\nimport { e as error } from \"./index.js\";\nimport { g as getDerivedRoles } from \"./authorization.js\";\nimport { i as isNollningPeriod } from \"./nollning.js\";\nimport { N as NOLLNING_TAG_PREFIX } from \"./types2.js\";\nconst getCustomAuthorOptions = async (prisma, memberId) => {\n  const activePositionIds = await prisma.position.findMany({\n    select: {\n      id: true\n    },\n    where: {\n      mandates: {\n        some: {\n          startDate: {\n            lte: /* @__PURE__ */ new Date()\n          },\n          endDate: {\n            gte: /* @__PURE__ */ new Date()\n          },\n          memberId\n        }\n      }\n    }\n  }).then((positions) => positions.map((pos) => pos.id));\n  return await prisma.customAuthor.findMany({\n    where: {\n      roles: {\n        some: {\n          role: {\n            in: getDerivedRoles(activePositionIds, !!memberId)\n          }\n        }\n      }\n    }\n  });\n};\nconst getCurrentDoorPoliciesForMember = async (prisma, studentId) => {\n  const memberPositionIds = await prisma.position.findMany({\n    select: {\n      id: true,\n      name: true,\n      boardMember: true\n    },\n    where: {\n      mandates: {\n        some: {\n          member: {\n            studentId\n          },\n          startDate: {\n            lte: /* @__PURE__ */ new Date()\n          },\n          endDate: {\n            gte: /* @__PURE__ */ new Date()\n          }\n        }\n      }\n    }\n  }).catch(() => {\n    throw error(500, \"Could not fetch member positions\");\n  });\n  const userDoorPolicies = await prisma.doorAccessPolicy.findMany({\n    where: {\n      AND: [\n        { isBan: false },\n        {\n          // is active, or indefinite\n          OR: [\n            { startDatetime: null },\n            { startDatetime: { lte: /* @__PURE__ */ new Date() } }\n          ]\n        },\n        {\n          // is active, or indefinite\n          OR: [{ endDatetime: null }, { endDatetime: { gte: /* @__PURE__ */ new Date() } }]\n        },\n        {\n          OR: [\n            {\n              studentId\n              /* is for this user */\n            },\n            {\n              // or is for a role this user has\n              role: {\n                in: getDerivedRoles(\n                  memberPositionIds.map((pos) => pos.id),\n                  true\n                ).concat(\n                  memberPositionIds.some((pos) => pos.boardMember) ? [\"dsek.styr\"] : []\n                )\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }).catch(() => {\n    throw error(500, \"Could not fetch door access\");\n  });\n  const doors = await prisma.door.findMany();\n  const policiesByDoor = userDoorPolicies.reduce(\n    (acc, policy) => {\n      const role = policy.role ?? \"Du\";\n      const duplicate = acc.find(\n        (p) => p.name === policy.doorName && p.startDate === policy.startDatetime && p.endDate === policy.endDatetime\n      );\n      if (duplicate) {\n        duplicate.roles.push(role);\n        return acc;\n      }\n      acc.push({\n        name: policy.doorName,\n        verboseName: doors.find((door) => door.name == policy.doorName)?.verboseName,\n        roles: [role],\n        startDate: policy.startDatetime,\n        endDate: policy.endDatetime\n      });\n      return acc;\n    },\n    []\n  );\n  const memberDoorPolicies = policiesByDoor.map(\n    (policy) => {\n      const positionsMappedToThisDoor = memberPositionIds.filter(\n        (pos) => policy.roles.some(\n          (role) => pos.id.startsWith(role) || pos.boardMember && role === \"dsek.styr\"\n        )\n      ).map((pos) => pos.name);\n      positionsMappedToThisDoor.sort();\n      return {\n        ...policy,\n        roles: positionsMappedToThisDoor.length > 0 ? positionsMappedToThisDoor : [\"Du\"]\n      };\n    }\n  );\n  memberDoorPolicies.sort((a, b) => a.name.localeCompare(b.name));\n  return memberDoorPolicies;\n};\nconst createMember = async (prisma, data) => {\n  if (await isNollningPeriod()) {\n    const defaultTag = await prisma.tag.findFirst({\n      where: {\n        name: {\n          startsWith: NOLLNING_TAG_PREFIX\n        }\n      }\n    });\n    return await prisma.member.create({\n      data: {\n        ...data,\n        subscriptionSettings: {\n          createMany: {\n            data: NOLLA_DEFAULT_SUBSCRIPTION_SETTINGS\n          }\n        },\n        subscribedTags: {\n          connect: defaultTag ? { id: defaultTag.id } : void 0\n        }\n      }\n    });\n  }\n  const defaultTags = await prisma.tag.findMany({\n    where: {\n      isDefault: true\n    }\n  });\n  return await prisma.member.create({\n    data: {\n      ...data,\n      subscriptionSettings: {\n        createMany: {\n          data: DEFAULT_SUBSCRIPTION_SETTINGS\n        }\n      },\n      subscribedTags: {\n        connect: defaultTags.map((tag) => ({ id: tag.id }))\n      }\n    }\n  });\n};\nexport {\n  getCustomAuthorOptions as a,\n  createMember as c,\n  getCurrentDoorPoliciesForMember as g\n};\n"],"names":[],"mappings":"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"}