{"version":3,"file":"group-B2hVm-1l.js","sources":["../../../.svelte-kit/adapter-node/chunks/group.js"],"sourcesContent":["import { a as getAuthorName } from \"./member.js\";\nimport { S as SHOULD_MERGE_NOTIFICATIONS, N as NotificationType } from \"./types3.js\";\nfunction groupAuthorNames(group) {\n  const authors = group.authors;\n  const authorCount = authors.length;\n  if (authorCount == 0) return \"Någon\";\n  const firstAuthor = authors[0];\n  if (!firstAuthor) return `${authorCount} personer`;\n  const firstAuthorName = getAuthorName(firstAuthor);\n  if (authorCount === 1) return getAuthorName(firstAuthor);\n  const secondAuthor = authors[1];\n  if (!secondAuthor) return `${firstAuthorName} och ${authorCount - 1} andra`;\n  const secondAuthorName = getAuthorName(secondAuthor);\n  if (authorCount === 2) return `${firstAuthorName} och ${secondAuthorName}`;\n  if (authorCount > 3)\n    return `${firstAuthorName}, ${secondAuthorName} och ${authorCount - 2} andra`;\n  const thirdAuthor = authors[2];\n  if (!thirdAuthor)\n    return `${firstAuthorName}, ${secondAuthorName} och ${authorCount - 2} andra`;\n  const thirdAuthorName = getAuthorName(secondAuthor);\n  return `${firstAuthorName}, ${secondAuthorName} och ${thirdAuthorName}`;\n}\nconst getGroupTexts = (group) => {\n  const type = group.type;\n  switch (type) {\n    case NotificationType.NEWS_LIKE:\n      return {\n        title: group.title,\n        // is the article header\n        message: `${groupAuthorNames(group)} har gillat din nyhet`\n      };\n    case NotificationType.EVENT_LIKE:\n      return {\n        title: group.title,\n        // is the event title\n        message: `${groupAuthorNames(group)} har gillat ditt evenemang`\n      };\n    case NotificationType.COMMENT:\n      return {\n        title: group.title,\n        // is the article header\n        message: `${groupAuthorNames(group)} har kommentaret`\n      };\n    case NotificationType.EVENT_COMMENT:\n      return {\n        title: group.title,\n        // is the event title\n        message: `${groupAuthorNames(group)} har kommentaret`\n      };\n    case NotificationType.MENTION:\n      return {\n        title: `${groupAuthorNames(group)} har nämnt dig i kommentarer`,\n        message: group.message\n        // is the content of the last comment\n      };\n    case NotificationType.EVENT_GOING:\n      return {\n        title: group.title,\n        // title of the event\n        message: `${groupAuthorNames(group)} kommer`\n      };\n    case NotificationType.EVENT_INTERESTED:\n      return {\n        title: group.title,\n        // title of the event\n        message: `${groupAuthorNames(group)} är intresserade`\n      };\n    case NotificationType.PING:\n      return {\n        title: group.title,\n        // says PING!\n        message: `${groupAuthorNames(group)} har pingat dig`\n      };\n    default:\n      throw new Error(\n        `Tried to group notification type which has no group handleer \"${type}\"`\n      );\n  }\n};\nconst convertSingleToGroup = (notification) => ({\n  ...notification,\n  authors: notification.fromAuthor ? [notification.fromAuthor] : [],\n  individualIds: [notification.id]\n});\nconst convertToGroup = (notifications) => {\n  if (notifications.length === 0) throw new Error(\"Empty group\");\n  const authors = notifications.map((n) => n.fromAuthor).filter(Boolean);\n  const uniqueAuthors = authors.length > 1 ? authors.filter(\n    (author, index) => authors.findIndex((other) => other.id === author.id) === index\n  ) : authors;\n  return {\n    ...notifications[0],\n    readAt: notifications.some((n) => n.readAt === null) ? null : notifications[0].readAt,\n    authors: uniqueAuthors,\n    individualIds: notifications.map((n) => n.id)\n  };\n};\nconst mergeNotifications = (notifications) => {\n  if (notifications.length === 1)\n    return convertSingleToGroup(notifications[0]);\n  const mostRecentNotification = notifications[0];\n  const type = mostRecentNotification.type;\n  if (!(type in SHOULD_MERGE_NOTIFICATIONS))\n    throw new Error(`unknown notification type: ${type}`);\n  if (!SHOULD_MERGE_NOTIFICATIONS[type])\n    return notifications.map(convertSingleToGroup);\n  const group = convertToGroup(notifications);\n  const texts = getGroupTexts(group);\n  group.title = texts.title;\n  group.message = texts.message;\n  return group;\n};\nconst sortNotificationGroups = (groups) => {\n  groups.sort((a, b) => b.createdAt.valueOf() - a.createdAt.valueOf());\n  return groups;\n};\nconst groupNotifications = (notifications) => {\n  const groups = {};\n  for (const notification of notifications) {\n    const key = `${notification.type};${notification.link}`;\n    if (groups[key] === void 0) {\n      groups[key] = [];\n    }\n    groups[key]?.push(notification);\n  }\n  const groupList = Object.values(groups).flatMap(\n    (group) => mergeNotifications(group)\n  );\n  return sortNotificationGroups(groupList);\n};\nexport {\n  groupNotifications as g\n};\n"],"names":[],"mappings":"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"}