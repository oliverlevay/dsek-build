{"version":3,"file":"EventPageLoad-CyGjGcfE.js","sources":["../../../.svelte-kit/adapter-node/chunks/EventPageLoad.js"],"sourcesContent":["import { g as getAllEvents, a as getAndValidatePage } from \"./getEvents.js\";\nimport { i as interestedGoingSchema } from \"./schema3.js\";\nimport { g as getAllTags } from \"./tags.js\";\nimport \"just-clone\";\nimport \"ts-deepmerge\";\nimport \"memoize-weak\";\nimport { z as zod } from \"./zod.js\";\nimport \"./index.js\";\nimport \"devalue\";\nimport { s as superValidate } from \"./superValidate.js\";\nconst eventPageLoad = (adminMode = false) => async ({ locals, url }) => {\n  const { prisma } = locals;\n  const [[events, pageCount], allTags] = await Promise.all([\n    getAllEvents(\n      prisma,\n      {\n        tags: url.searchParams.getAll(\"tags\"),\n        search: url.searchParams.get(\"search\") ?? void 0,\n        page: getAndValidatePage(url),\n        pastEvents: url.searchParams.get(\"past\") === \"on\"\n      },\n      !adminMode\n    ),\n    getAllTags(prisma, adminMode)\n  ]);\n  return {\n    events,\n    pageCount,\n    allTags,\n    interestedGoingForm: await superValidate(zod(interestedGoingSchema))\n  };\n};\nexport {\n  eventPageLoad as e\n};\n"],"names":[],"mappings":";;;;;;AAUK,MAAC,aAAa,GAAG,CAAC,SAAS,GAAG,KAAK,KAAK,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK;AACxE,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC5B,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;AAC3D,IAAI,YAAY;AAChB,MAAM,MAAM;AACZ,MAAM;AACN,QAAQ,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;AAC7C,QAAQ,MAAM,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC;AACxD,QAAQ,IAAI,EAAE,kBAAkB,CAAC,GAAG,CAAC;AACrC,QAAQ,UAAU,EAAE,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI;AACzD,OAAO;AACP,MAAM,CAAC,SAAS;AAChB,KAAK;AACL,IAAI,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC;AACjC,GAAG,CAAC,CAAC;AACL,EAAE,OAAO;AACT,IAAI,MAAM;AACV,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,mBAAmB,EAAE,MAAM,aAAa,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AACxE,GAAG,CAAC;AACJ;;;;"}