{"version":3,"file":"index3-CPnAgoK8.js","sources":["../../../.svelte-kit/adapter-node/chunks/index3.js"],"sourcesContent":["import { a as authorizedPrismaClient } from \"./authorizedPrisma.js\";\nimport { e as error } from \"./index.js\";\nimport { Expo } from \"expo-server-sdk\";\nimport { N as NotificationType, a as SUBSCRIPTION_SETTINGS_MAP } from \"./types3.js\";\nasync function sendPushNotifications(tokens, title, body, type, link) {\n  const expo = new Expo();\n  const messages = tokens.filter(({ token }) => Expo.isExpoPushToken(token)).map(({ token, unreadNotifications }) => ({\n    to: token,\n    title,\n    body,\n    channelId: \"default\",\n    data: { link },\n    sound: \"default\",\n    priority: \"high\",\n    badge: unreadNotifications ?? 0\n  }));\n  if (messages.length === 0) {\n    return;\n  }\n  const chunks = expo.chunkPushNotifications(messages);\n  const results = await Promise.allSettled(\n    chunks.map((chunk) => expo.sendPushNotificationsAsync(chunk))\n  );\n  const failedMessages = results.map((r, i) => [r, i]).filter(([result]) => result.status === \"rejected\").flatMap(([, i]) => chunks[i]).length;\n  if (failedMessages) {\n    console.error(`Failed to send ${failedMessages} push notifications`);\n  }\n  if (failedMessages === messages.length) {\n    throw error(500, \"Failed to send push notifications\");\n  }\n}\nconst DUPLICATE_ALLOWED_TYPES = [\n  NotificationType.CREATE_MANDATE,\n  NotificationType.ARTICLE_REQUEST_UPDATE,\n  NotificationType.BOOKING_REQUEST,\n  NotificationType.PAYMENT_STATUS,\n  NotificationType.PURCHASE_TIME_TO_BUY,\n  NotificationType.PURCHASE_SOLD_OUT,\n  NotificationType.PURCHASE_IN_QUEUE,\n  NotificationType.PURCHASE_CONSUMABLE_EXPIRED,\n  NotificationType.PAYMENT_STATUS\n];\nconst prisma = authorizedPrismaClient;\nconst sendNotification = async ({\n  title,\n  message,\n  type,\n  link,\n  memberIds,\n  fromAuthor,\n  fromMemberId\n}) => {\n  if ((memberIds?.length ?? 0) == 0) return;\n  const settingType = Object.entries(\n    SUBSCRIPTION_SETTINGS_MAP\n  ).find(([, internalTypes]) => internalTypes.includes(type))?.[0] ?? type;\n  const existingAuthor = fromAuthor ?? (fromMemberId ? await prisma.author.findFirst({\n    where: { memberId: fromMemberId, mandateId: null, customId: null }\n  }) : void 0);\n  const notificationAuthor = existingAuthor ?? (fromMemberId ? await prisma.author.create({\n    data: { memberId: fromMemberId }\n  }) : void 0);\n  const shouldReceiveDuplicates = DUPLICATE_ALLOWED_TYPES.includes(type);\n  const receivingMembers = await prisma.member.findMany({\n    where: {\n      subscriptionSettings: {\n        some: {\n          type: settingType\n        }\n      },\n      notifications: shouldReceiveDuplicates ? void 0 : {\n        none: {\n          type,\n          link,\n          fromAuthorId: notificationAuthor?.id\n        }\n      },\n      id: {\n        not: process.env[\"NODE_ENV\"] === \"development\" ? void 0 : notificationAuthor?.memberId,\n        ...memberIds !== void 0 && memberIds.length > 0 ? { in: memberIds } : {}\n      }\n    },\n    select: {\n      id: true,\n      subscriptionSettings: {\n        where: {\n          type: settingType\n        },\n        select: {\n          pushNotification: true\n        }\n      }\n    }\n  });\n  if (receivingMembers.length < 1) {\n    return;\n  }\n  console.log(\n    `Sending ${type} notification to ${receivingMembers.length} members${notificationAuthor ? `, sent from author:${notificationAuthor.id} [${notificationAuthor.type}, member: ${notificationAuthor.memberId}]` : \"\"}`\n  );\n  if (title.length > 255) title = title.substring(0, 251) + \"...\";\n  if (message.length > 255) message = message.substring(0, 251) + \"...\";\n  try {\n    await sendWeb(\n      title,\n      message,\n      type,\n      link,\n      notificationAuthor,\n      receivingMembers\n    );\n  } catch (e) {\n    console.warn(\"Failed to create web notifications\", e);\n    throw error(500, \"Failed to create notifications\");\n  }\n  try {\n    await sendPush(title, message, settingType, link, receivingMembers);\n  } catch (e) {\n    console.warn(\"Failed to create push notifications\", e);\n    throw error(500, \"Failed to create push notifications\");\n  }\n};\nconst sendWeb = async (title, message, type, link, notificationAuthor, receivingMembers) => {\n  return prisma.notification.createMany({\n    data: receivingMembers.map(({ id: memberId }) => ({\n      title,\n      message,\n      type,\n      link,\n      memberId,\n      fromAuthorId: notificationAuthor?.id\n    }))\n  });\n};\nconst sendPush = async (title, message, type, link, receivingMembers) => {\n  const pushNotificationMembers = receivingMembers.filter(\n    (member) => member.subscriptionSettings.some(\n      (settings) => settings.pushNotification\n    )\n  ).map((member) => member.id);\n  const tokensAndUnreadNotificationCount = await prisma.expoToken.findMany({\n    where: {\n      memberId: {\n        in: pushNotificationMembers\n      }\n    },\n    select: {\n      expoToken: true,\n      member: {\n        select: {\n          _count: {\n            select: {\n              notifications: {\n                where: {\n                  readAt: null\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  });\n  if (tokensAndUnreadNotificationCount.length > 0) {\n    sendPushNotifications(\n      tokensAndUnreadNotificationCount.map((token) => ({\n        token: token.expoToken,\n        unreadNotifications: token.member?._count.notifications\n      })),\n      title,\n      message,\n      type,\n      link\n    );\n  }\n};\nexport {\n  sendNotification as s\n};\n"],"names":[],"mappings":"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"}