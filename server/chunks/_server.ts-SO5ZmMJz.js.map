{"version":3,"file":"_server.ts-SO5ZmMJz.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/(app)/salto/_door_/_server.ts.js"],"sourcesContent":["import { a as authorizedPrismaClient } from \"../../../../../chunks/authorizedPrisma.js\";\nconst BACKUP_LIST_OF_STUDENT_IDS = [\n  \"ph3883ni-s\",\n  // KM, Philip Nielsen\n  \"es1767st-s\"\n  // root, EsbjÃ¶rn Stenberg\n];\nfunction parseDoorPolicies(policies) {\n  const studentIds = policies.map((policy) => policy.studentId).filter((id) => id !== null);\n  const positionIds = policies.map((policy) => policy.role).filter((id) => id !== null);\n  return { studentIds, positionIds };\n}\nfunction parseDoorBanPolicies(policies) {\n  const studentIdsBanned = policies.filter((policy) => policy.isBan).map((policy) => policy.studentId).filter((id) => id !== null);\n  const positionIdsBanned = policies.filter((policy) => policy.isBan).map((policy) => policy.role).filter((id) => id !== null);\n  return { studentIdsBanned, positionIdsBanned };\n}\nfunction fetchMatchingPositions(positions, prisma) {\n  return prisma.position.findMany({\n    where: {\n      OR: positions.map((p) => ({\n        id: {\n          startsWith: `${p}%`\n        }\n      }))\n    }\n  });\n}\nasync function fetchStudentsWithPositions(positions, prisma) {\n  const mandates = await prisma.mandate.findMany({\n    where: {\n      AND: [\n        { positionId: { in: positions } },\n        { startDate: { lte: /* @__PURE__ */ new Date() } },\n        { endDate: { gte: /* @__PURE__ */ new Date() } }\n      ]\n    },\n    select: {\n      member: {\n        select: {\n          studentId: true\n        }\n      }\n    }\n  });\n  const studentIds = mandates.map((mandate) => mandate.member.studentId);\n  return studentIds.filter((id) => id !== null);\n}\nconst GET = async ({ params }) => {\n  try {\n    const now = (/* @__PURE__ */ new Date()).toISOString();\n    const policies = await authorizedPrismaClient.doorAccessPolicy.findMany({\n      where: {\n        AND: [\n          { doorName: params[\"door\"] },\n          {\n            OR: [{ startDatetime: { lte: now } }, { startDatetime: null }]\n          },\n          {\n            OR: [{ endDatetime: { gte: now } }, { endDatetime: null }]\n          }\n        ]\n      }\n    });\n    const { studentIds, positionIds } = parseDoorPolicies(policies);\n    const { studentIdsBanned } = parseDoorBanPolicies(policies);\n    const studentsFromWildcard = positionIds.includes(\"*\") ? authorizedPrismaClient.member.findMany({\n      where: { classYear: { gte: (/* @__PURE__ */ new Date()).getFullYear() - 10 } },\n      select: { studentId: true }\n    }).then(\n      (members) => members.map((member) => member.studentId).filter((id) => id !== null)\n    ) : [];\n    const positions = await fetchMatchingPositions(\n      positionIds,\n      authorizedPrismaClient\n    );\n    const studentsFromPositions = await fetchStudentsWithPositions(\n      positions.map((p) => p.id),\n      authorizedPrismaClient\n    );\n    const bannedStudents = new Set(studentIdsBanned);\n    const allowedStudents = [\n      ...studentIds,\n      ...studentsFromPositions,\n      ...await studentsFromWildcard\n    ].filter((studentId) => !bannedStudents.has(studentId));\n    return new Response(\n      Array.from([\n        .../* @__PURE__ */ new Set([...allowedStudents, ...BACKUP_LIST_OF_STUDENT_IDS])\n      ]).join(\"\\n\")\n    );\n  } catch {\n    return new Response(BACKUP_LIST_OF_STUDENT_IDS.join(\"\\n\"));\n  }\n};\nexport {\n  GET\n};\n"],"names":[],"mappings":"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"}