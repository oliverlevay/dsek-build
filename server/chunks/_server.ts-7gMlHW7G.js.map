{"version":3,"file":"_server.ts-7gMlHW7G.js","sources":["../../../.svelte-kit/adapter-node/entries/endpoints/(app)/api/notifications/uploadToken/_server.ts.js"],"sourcesContent":["import { e as error } from \"../../../../../../chunks/index.js\";\nimport { a as authorizedPrismaClient } from \"../../../../../../chunks/authorizedPrisma.js\";\nconst cache = /* @__PURE__ */ new Map();\nconst CACHE_CLEAR_INTERVAL = 7 * 24 * 60 * 60 * 1e3;\nsetInterval(() => {\n  cache.clear();\n}, CACHE_CLEAR_INTERVAL);\nconst uploadNotificationToken = async (user, token) => {\n  if (!user?.memberId) {\n    throw error(401, \"Not logged in\");\n  }\n  if (cache.get(token) == user.memberId) return;\n  try {\n    const existing = await authorizedPrismaClient.expoToken.findUnique({\n      where: {\n        expoToken: token,\n        memberId: user.memberId\n      }\n    });\n    if (existing) {\n      cache.set(token, user.memberId);\n      return;\n    }\n    await authorizedPrismaClient.expoToken.upsert({\n      update: {\n        memberId: user.memberId\n      },\n      where: {\n        expoToken: token\n      },\n      create: {\n        memberId: user.memberId,\n        expoToken: token\n      }\n    });\n    cache.set(token, user.memberId);\n  } catch (e) {\n    console.error(e);\n    if (e instanceof Error) {\n      throw error(500, `Couldn't save token: ${e.message}`);\n    }\n    throw error(500, `Couldn't save token: ${e}`);\n  }\n};\nconst POST = async ({ locals, request }) => {\n  const { user } = locals;\n  const body = await request.json();\n  if (!(\"notificationToken\" in body)) {\n    throw error(400, \"Invalid body, missing notification token\");\n  }\n  const token = body.notificationToken;\n  await uploadNotificationToken(user, token);\n  return new Response(\"Token saved\");\n};\nexport {\n  POST\n};\n"],"names":[],"mappings":";;;;AAEA,MAAM,KAAK,mBAAmB,IAAI,GAAG,EAAE,CAAC;AACxC,MAAM,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;AACpD,WAAW,CAAC,MAAM;AAClB,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;AAChB,CAAC,EAAE,oBAAoB,CAAC,CAAC;AACzB,MAAM,uBAAuB,GAAG,OAAO,IAAI,EAAE,KAAK,KAAK;AACvD,EAAE,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;AACvB,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,eAAe,CAAC,CAAC;AACtC,GAAG;AACH,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,OAAO;AAChD,EAAE,IAAI;AACN,IAAI,MAAM,QAAQ,GAAG,MAAM,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC;AACvE,MAAM,KAAK,EAAE;AACb,QAAQ,SAAS,EAAE,KAAK;AACxB,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC/B,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACtC,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,sBAAsB,CAAC,SAAS,CAAC,MAAM,CAAC;AAClD,MAAM,MAAM,EAAE;AACd,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC/B,OAAO;AACP,MAAM,KAAK,EAAE;AACb,QAAQ,SAAS,EAAE,KAAK;AACxB,OAAO;AACP,MAAM,MAAM,EAAE;AACd,QAAQ,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC/B,QAAQ,SAAS,EAAE,KAAK;AACxB,OAAO;AACP,KAAK,CAAC,CAAC;AACP,IAAI,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpC,GAAG,CAAC,OAAO,CAAC,EAAE;AACd,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACrB,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE;AAC5B,MAAM,MAAM,KAAK,CAAC,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC5D,KAAK;AACL,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,GAAG;AACH,CAAC,CAAC;AACG,MAAC,IAAI,GAAG,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK;AAC5C,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC;AAC1B,EAAE,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC;AACpC,EAAE,IAAI,EAAE,mBAAmB,IAAI,IAAI,CAAC,EAAE;AACtC,IAAI,MAAM,KAAK,CAAC,GAAG,EAAE,0CAA0C,CAAC,CAAC;AACjE,GAAG;AACH,EAAE,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC;AACvC,EAAE,MAAM,uBAAuB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC7C,EAAE,OAAO,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC;AACrC;;;;"}