{"version":3,"file":"actions2-BSfd5e_B.js","sources":["../../../.svelte-kit/adapter-node/chunks/actions2.js"],"sourcesContent":["import { P as PUBLIC_BUCKETS_FILES } from \"./public.js\";\nimport { u as uploadFile } from \"./uploadFiles.js\";\nimport { i as isFileImage } from \"./utils2.js\";\nimport { a as authorSchema, t as tagSchema } from \"./schemas.js\";\nimport { z } from \"zod\";\nimport { a as authorizedPrismaClient } from \"./authorizedPrisma.js\";\nimport { s as sendNotification } from \"./index3.js\";\nimport { N as NotificationType } from \"./types3.js\";\nimport { r as redirect } from \"./redirect.js\";\nimport { s as slugify, a as slugWithCount } from \"./slugify.js\";\nimport { fJ as news_articleCreated, fA as news_errors_articleNotFound, fK as news_articleUpdated } from \"./messages.js\";\nimport { Prisma } from \"@prisma/client\";\nimport \"just-clone\";\nimport \"ts-deepmerge\";\nimport \"memoize-weak\";\nimport { z as zod } from \"./zod.js\";\nimport \"./client.js\";\nimport \"./superForm.js\";\nimport \"./index.js\";\nimport \"devalue\";\nimport { s as superValidate, f as fail, m as message } from \"./superValidate.js\";\nimport DOMPurify from \"isomorphic-dompurify\";\nimport { markdownToTxt } from \"markdown-to-txt\";\nconst articleSchema = z.object({\n  slug: z.string(),\n  header: z.string().min(1, \"Title cannot be empty\"),\n  headerEn: z.string().nullable(),\n  body: z.string().default(\"\"),\n  bodyEn: z.string().nullable(),\n  author: authorSchema,\n  tags: z.array(\n    tagSchema.pick({\n      id: true\n    })\n  ).default([]),\n  imageUrl: z.string().optional().nullable(),\n  // only for uploading files\n  image: z.instanceof(File, { message: \"Please upload a file\" }).nullable().optional().refine((file) => !file || isFileImage(file), {\n    message: \"MÃ¥ste vara en bild\"\n  })\n});\nconst createSchema = articleSchema.omit({\n  slug: true\n}).extend({\n  notificationText: z.string().max(255).optional().nullable(),\n  sendNotification: z.boolean()\n}).refine((data) => data.sendNotification === false || data.tags.length > 0, {\n  message: \"Tags cannot be empty if you want to send a notification. No notifications will be sent\",\n  path: [\"tags\"]\n});\nconst updateSchema = articleSchema;\nconst uploadImage = async (user, image, slug) => {\n  const imageUrl = await uploadFile(\n    user,\n    image,\n    `public/news/${slug}`,\n    PUBLIC_BUCKETS_FILES,\n    \"header\",\n    {\n      resize: {\n        width: 1920\n      }\n    }\n  );\n  return imageUrl;\n};\nconst sendNewArticleNotification = async (article, notificationText) => {\n  console.log(\"notifications: getting members\");\n  const subscribedMembers = await authorizedPrismaClient.member.findMany({\n    where: {\n      subscribedTags: {\n        some: {\n          id: {\n            in: article.tags.map(({ id }) => id)\n          }\n        }\n      }\n    },\n    select: {\n      id: true\n    }\n  });\n  console.log(\"notifications: sending\");\n  await sendNotification({\n    title: article.header,\n    message: notificationText ? notificationText : markdownToTxt(article.body).slice(0, 254),\n    type: NotificationType.NEW_ARTICLE,\n    link: `/news/${article.slug}`,\n    fromAuthor: article.author,\n    memberIds: subscribedMembers.map(({ id }) => id)\n  });\n};\nconst createArticle = async (event) => {\n  const { request, locals } = event;\n  const { prisma, user } = locals;\n  const form = await superValidate(request, zod(createSchema), {\n    allowFiles: true\n  });\n  if (!form.valid) return fail(400, { form });\n  const {\n    author,\n    tags,\n    header,\n    sendNotification: shouldSendNotification,\n    notificationText,\n    image,\n    body,\n    bodyEn,\n    ...rest\n  } = form.data;\n  const existingAuthor = await prisma.author.findFirst({\n    where: {\n      member: { studentId: user?.studentId },\n      mandateId: author.mandateId,\n      customId: author.customId\n    }\n  });\n  let slug = slugify(header);\n  const slugCount = await authorizedPrismaClient.article.count({\n    where: {\n      slug: { startsWith: slug }\n    }\n  });\n  slug = slugWithCount(slug, slugCount);\n  if (image) rest.imageUrl = await uploadImage(user, image, slug);\n  const result = await prisma.article.create({\n    data: {\n      slug,\n      header,\n      body: DOMPurify.sanitize(body),\n      bodyEn: bodyEn ? DOMPurify.sanitize(bodyEn) : bodyEn,\n      ...rest,\n      author: {\n        connect: existingAuthor ? {\n          id: existingAuthor.id\n        } : void 0,\n        create: !existingAuthor ? {\n          member: {\n            connect: { studentId: user?.studentId }\n          },\n          mandate: author.mandateId ? {\n            connect: {\n              member: { studentId: user?.studentId },\n              id: author.mandateId\n            }\n          } : void 0,\n          customAuthor: author.customId ? {\n            connect: { id: author.customId }\n          } : void 0\n        } : void 0\n      },\n      tags: {\n        connect: tags.filter((tag) => !!tag).map((tag) => ({\n          id: tag.id\n        }))\n      },\n      publishedAt: /* @__PURE__ */ new Date()\n    },\n    include: {\n      author: true\n    }\n  });\n  if (shouldSendNotification) {\n    console.log(\"send notifications\");\n    await sendNewArticleNotification(\n      {\n        ...result,\n        tags\n      },\n      notificationText\n    );\n  }\n  throw redirect(\n    `/news/${result.slug}`,\n    {\n      message: news_articleCreated(),\n      type: \"success\"\n    },\n    event\n  );\n};\nconst updateArticle = async (event) => {\n  const { request, locals } = event;\n  const { prisma, user } = locals;\n  const form = await superValidate(request, zod(updateSchema), {\n    allowFiles: true\n  });\n  if (!form.valid) return fail(400, { form });\n  const { slug, author, tags, image, body, bodyEn, ...rest } = form.data;\n  const existingAuthor = await prisma.author.findFirst({\n    where: {\n      member: { id: author.memberId },\n      mandateId: author.mandateId,\n      customId: author.customId\n    }\n  });\n  if (image) rest.imageUrl = await uploadImage(user, image, slug);\n  try {\n    await prisma.article.update({\n      where: {\n        slug\n      },\n      data: {\n        body: DOMPurify.sanitize(body),\n        bodyEn: bodyEn ? DOMPurify.sanitize(bodyEn) : bodyEn,\n        ...rest,\n        author: {\n          connect: existingAuthor ? {\n            id: existingAuthor.id\n          } : void 0,\n          create: existingAuthor ? {\n            member: {\n              connect: { studentId: user?.studentId }\n            },\n            mandate: author.mandateId ? {\n              connect: {\n                member: { studentId: user?.studentId },\n                id: author.mandateId\n              }\n            } : void 0,\n            customAuthor: author.customId ? {\n              connect: { id: author.customId }\n            } : void 0\n          } : void 0\n        },\n        tags: {\n          set: tags.map(({ id }) => ({ id }))\n        },\n        updatedAt: /* @__PURE__ */ new Date()\n      }\n    });\n  } catch (e) {\n    if (e instanceof Prisma.PrismaClientKnownRequestError) {\n      return message(\n        form,\n        {\n          message: news_errors_articleNotFound(),\n          type: \"error\"\n        },\n        { status: 400 }\n      );\n    }\n    throw e;\n  }\n  throw redirect(\n    `/news/${event.params.slug}`,\n    {\n      message: news_articleUpdated(),\n      type: \"success\"\n    },\n    event\n  );\n};\nexport {\n  updateArticle as a,\n  createArticle as b,\n  createSchema as c,\n  updateSchema as u\n};\n"],"names":[],"mappings":"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"}