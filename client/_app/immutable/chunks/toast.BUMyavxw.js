import{w as m}from"./index.BanBdRDU.js";var u=[];for(var d=0;d<256;++d)u.push((d+256).toString(16).slice(1));function p(n,e=0){return(u[n[e+0]]+u[n[e+1]]+u[n[e+2]]+u[n[e+3]]+"-"+u[n[e+4]]+u[n[e+5]]+"-"+u[n[e+6]]+u[n[e+7]]+"-"+u[n[e+8]]+u[n[e+9]]+"-"+u[n[e+10]]+u[n[e+11]]+u[n[e+12]]+u[n[e+13]]+u[n[e+14]]+u[n[e+15]]).toLowerCase()}var o,y=new Uint8Array(16);function U(){if(!o&&(o=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!o))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return o(y)}var v=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);const c={randomUUID:v};function g(n,e,r){if(c.randomUUID&&!e&&!n)return c.randomUUID();n=n||{};var t=n.random||(n.rng||U)();return t[6]=t[6]&15|64,t[8]=t[8]&63|128,p(t)}const i=m([]);function w(n,e="info",r){r?i.update(t=>t.some(a=>a.id===r)?t:[...t,{message:n,type:e,id:r}]):i.update(t=>[...t,{message:n,type:e,id:g()}]),setTimeout(l,e==="error"?4e3:2e3)}function l(){i.update(n=>n.slice(1))}export{i as a,w as t};
